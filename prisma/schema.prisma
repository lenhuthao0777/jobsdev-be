// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// @jobsdev0777
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  firstName      String
  lastName       String
  email          String          @unique
  password       String
  accessToken    String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  profile        Profile?
  roleId         String
  role           Role            @relation(fields: [roleId], references: [id])
  Job            Job[]
  CompanyProfile CompanyProfile?
}

model Profile {
  id              String   @id @default(uuid())
  firstName       String?
  lastName        String?
  headLine        String?
  education       String?
  region          String?
  city            String?
  summary         String?
  industry        String?
  avatar          String?
  backgroundImage String?
  contact         String?
  content         Json?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String   @unique

  @@index([userId])
}

model CompanyProfile {
  id              String   @id @default(uuid())
  firstName       String?
  lastName        String?
  headLine        String?
  region          String?
  city            String?
  summary         String?
  industry        String?
  companySize     String?
  contact         String?
  avatar          String?
  backgroundImage String?
  content         Json?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String   @unique

  @@index([userId])
}

model Role {
  id        String   @id @default(uuid())
  name      String
  type      Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
}

model Skill {
  id         String       @id @default(uuid())
  name       String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  SkillOnJob SkillOnJob[]
}

model Job {
  id           String       @id @default(uuid())
  title        String       @db.VarChar(255)
  location     String?
  locationCode String?
  level        String?
  typeWorking  String?
  salaryRange  String?
  content      Json?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  userId       String
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  SkillOnJob   SkillOnJob[]
}

model SkillOnJob {
  job     Job    @relation(fields: [jobId], references: [id])
  jobId   String
  skill   Skill  @relation(fields: [skillId], references: [id])
  skillId String

  @@id([jobId, skillId])
  @@index([jobId])
  @@index([skillId])
}
